apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-mysql
  namespace: rig-and-barter
spec:
  replicas: __REPLICAS__
  selector:
    matchLabels:
      app: keycloak-mysql
  template:
    metadata:
      labels:
        app: keycloak-mysql
    spec:
      containers:
        - name: keycloak-mysql
          image: mysql:8
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mysql_root_password
                  name: keycloak-mysql-secrets
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: mysql_database
                  name: keycloak-mysql-config
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: mysql_user
                  name: keycloak-mysql-secrets
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mysql_password
                  name: keycloak-mysql-secrets
          volumeMounts:
            - name: keycloak-mysql-data
              mountPath: /data/mysql-prod
      volumes:
        - name: keycloak-mysql-data
          persistentVolumeClaim:
            claimName: keycloak-mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-mysql
  namespace: rig-and-barter
spec:
  selector:
    app: keycloak-mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-mysql-pvc
  namespace: rig-and-barter
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-mysql-config
  namespace: rig-and-barter
data:
  mysql_database: "keycloak"