apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mysql
  name: mysql
  namespace: demo-rig-and-barter
spec:
  replicas: __REPLICAS__
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: mysql:8.3.0
          name: mysql
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: mysql_root_password
          volumeMounts:
            - mountPath: /data/mysql-demo
              name: mysql-data
            - mountPath: /docker-entrypoint-initdb.d
              name: mysql-config
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: mysql-config
          configMap:
            name: mysql-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mysql
  name: mysql
  namespace: demo-rig-and-barter
spec:
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  selector:
    app: mysql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: demo-rig-and-barter
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: demo-rig-and-barter
data:
  initdb.sql: |
    CREATE DATABASE IF NOT EXISTS user_service;
    CREATE DATABASE IF NOT EXISTS transaction_service;
    CREATE DATABASE IF NOT EXISTS payment_service;